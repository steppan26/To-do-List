*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

:root {
    --clr-primary : hsla(220, 50%, 50%, 1);
    --clr-primary-accent : hsla(220, 100%, 40%, 1);
    --clr-secondary : hsla(40, 75%, 50%, 1);
    --text-clr-primary : hsla(40, 100%, 70%, 1);
    --text-clr-secondary : hsla(220, 35%, 50%, 1);


}
body{
    position: relative;
    display: flex;
    flex-flow: column nowrap;
    justify-content: flex-start;
    align-items: center;
    font-family: 'Raleway', sans-serif;
    background-color: var(--clr-primary);
    height: max-content;
    min-height: 100vh;
}

header {
    opacity: 0.4;
    padding: 1.5rem 0;
    text-align: center;
    width: 70%;

}

/* lists section */
    .all-tasks {
        visibility:visible;
        display: flex;
        flex-flow: column nowrap;
        position: relative;
        width: 60vw;
        max-width: 60vw;
        height: max-content;
        padding-top: 1em;
        padding-left: 1em;
        color: var(--text-clr-primary);
        background-color: var(--clr-primary);
        z-index: 5;
    }

    .menu-btn {
        position: relative;
        cursor: pointer;
        width: max-content;
        padding: 0.2rem 0.8rem;
        box-shadow: 0px 0px 8px 0px var(--clr-primary-accent) inset;
        border-radius: 10px;
        color: var(--clr-primary-accent);
        font-size: 2rem;
        font-weight: 900;
    }

    .hidden {
        visibility: hidden;
    }

    .task-list {
        line-height: 1.7;
        list-style: circle inside;
        padding: 0.5em 0;
        background-color: var(--clr-primary);
        overflow: hidden;
        height: 0;

        transition: height 220ms ease-in-out;
    }

    .reduce {
        height: 0;
    }

    .task-list > li{
        cursor: pointer;
        text-align: left;
        text-transform: capitalize;
        transform: scale(1);
        transition: opacity 190ms ease-in-out, transform 280ms ease-in-out;
    }

    .task-list > li:hover {
        opacity: 0.4;
        /* transform: scale(1.1); */
    }

    .active-list {
        font-weight: 900;
        letter-spacing: 1px;
        list-style: disc inside;
    }

    form{
        display: flex;
        position: fixed;
        bottom: -5px;
        left: 2.5em;
        right: 2.5em;
        padding: 1.2em 2.5em;
        background-color: var(--clr-secondary);
        border-radius: 30px 30px 0 0;
        border: 1px solid var(--clr-secondary);
        box-shadow: 0 0 0 2px var(--clr-primary-accent) inset;
    }
/* end of lists section */

.new-input{
    background: transparent;
    border: none;
    border-bottom: 1px solid currentColor;
    font-size: inherit;
    outline: none;
    color: inherit;
    transition: border-bottom 120ms ease-in;
    order: 3;
    margin: 1em 0.7em;
    width: 100%;
}


.new-input:focus{
    border-bottom-width: 2px;
}

.new-input:focus::placeholder {
    opacity: 0.2;
}

.btn {
    border: 0;
    background: 0;
    padding: 0;
    color: inherit;
    font-weight: 900;
    font-size: 1.2em;
}

section {
    width: 85vw;
    height: max-content;
    max-height: 75vh;
    padding: 1em;
    border-radius: 8px;
    border: 2px double var(--clr-secondary);
    background-color: var(--clr-secondary);
    color: var(--text-clr-secondary);
    z-index: 0;
}

.list-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-flow: row nowrap;
    align-content: flex-start;
    margin-bottom: 1rem;
}

.list-header > h2 {
    text-transform: uppercase;
    font-size: 1.5em;
    margin-right: 1em;
}

.list-header > p {
    font-size: 0.85em;
}

.list-body{
    position: relative;
}

.list-body .btn {
    color: var(--clr-primary-accent);
}

.tasks{
    display: inline-flex;
    flex-direction: column;
    list-style: circle;
}

.task-item {
    position: relative;
    font-weight: 500;
    opacity: 0.8;
    transition: opacity 180ms ease-in-out;
}

.task-item:hover {
    opacity: 1;
}

.task-item::after {
    content: "";
    position: absolute;
    right: 0;
    left: 0;
    bottom: 0;
    height: 1px;
    background: currentColor ;
    opacity: 0.2;
}

[type="checkbox"] {
    opacity: 0;
    position: absolute;
}

.task-item label {
    display: inline-flex;
    position: relative;
    align-items: center;
    margin: 1.15em 0;
    padding-right: 0.3em;
}

.custom-checkbox {
    --size: .9em;
    cursor: pointer;
    display: inline-block;
    width: var(--size);
    height: var(--size);
    margin-right: var(--size);
    border: 2px solid var(--clr-primary);
    border-radius: 50%;
    transform: scale(1);
    transition: transform 200ms ease-in-out, color 160ms ease-in;
}

.task-item:hover .custom-checkbox,
[type="checkbox"]:focus + label .custom-checkbox {
    transform: scale(1.2);
    color: var(--clr-primary-accent);
}

[type="checkbox"]:checked + label .custom-checkbox {
    background: var(--clr-primary-accent);
    border-color: var(--clr-primary-accent);
    box-shadow: inset 0 0 0px 2px var(--clr-secondary);
}

[type="checkbox"]:checked + label {
    opacity: 0.4;
}

.task-item label::after {
    content: "";
    position: absolute;
    left: 0;
    right: 0;
    height: 2px;
    margin-left: 1.5em;
    background: currentColor;
    transform: scaleX(0);
    transform-origin: right;

    transition: transform 150ms ease-in-out;
}

[type="checkbox"]:checked + label::after{
    transform: scaleX(1);
    transform-origin: left;
}

.btns-wrapper {
    display: flex;
    justify-content: space-between;
    position: absolute;
    width: 100%;
    left: 0;
    bottom: -50px;
    font-size: 0.6em;
}

.btns-wrapper > .btn {
    cursor: pointer;
    color: var(--clr-secondary);
    font-weight: 500;
    letter-spacing: 1px;
}

.btns-wrapper > .btn:hover {
    color: var(--text-clr-primary);

}